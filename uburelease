#!/bin/sh
set -e

if [ ! -f $HOME/ubumirror.conf ]; then
	echo "No $HOME/ubumirror.conf!"
	exit
fi

. $HOME/ubumirror.conf

LOCK="${RELEASE}/Archive-Update-in-Progress-${HOSTNAME}"

# Get in the right directory and set the umask to be group writable
cd $HOME
umask 022

# Check to see if another sync is in progress
if lockfile -! -l 43200 -r 0 "$LOCK"; then
  echo $HOSTNAME is unable to start rsync, lock file exists
  exit 1
fi
trap 'rm -f $LOCK > /dev/null 2>&1; echo -n "Done at " >> $LOGDIR/uburelease.log; date >> $LOGDIR/uburelease.log; savelog -n $LOGDIR/uburelease.log > /dev/null' EXIT

echo -n "Starting at " >> $LOGDIR/uburelease.log
date >> $LOGDIR/uburelease.log

set +e
echo "Syncing files needed to use jigit..." >> $LOGDIR/uburelease.log
rsync -av --timeout=600 --exclude *.iso --exclude jigit/ \
      $RE_EXCLUDE \
      $RE_HOST::$RE_DIR/ $RELEASE >> $LOGDIR/uburelease.log 2>&1

if [ `grep -c '^total size is' $LOGDIR/uburelease.log ` -ne 1 ]; then
        ( echo "Eeek. Ubuntu jigdo rsync broke down... Check logs.."; \
          egrep '^write failed|@ERROR' $LOGDIR/uburelease.log ) | mail -s "Ubuntu release sync failed" $EMAIL
        echo "Eeek. Ubuntu jigdo rsync broke down..." >> $LOGDIR/uburelease.log
        exit 1
fi

echo -n "Done at " >> $LOGDIR/uburelease.log
date >> $LOGDIR/uburelease.log && echo "" >> $LOGDIR/uburelease.log
if [ -n $ARCHIVE ]; then
echo "Generating images for alternate CDs..." >> $LOGDIR/uburelease.log

for a in ${RELEASE}/*; do
    if [ -d $a -a ! -L $a ]; then
        for b in ${a}/*.jigdo; do
            c=`basename $b .jigdo`
            echo -n "jigiting ${c}.iso..." >> $LOGDIR/uburelease.log
            mkimage -m Debian=$ARCHIVE -f ${a}/MD5SUMS -j ${a}/${c}.jigdo -t ${a}/${c}.template -o ${a}/.${c}.iso >> $LOGDIR/uburelease.log 2>/dev/null
            if [ -s ${a}/.${c}.iso ]; then
                mv ${a}/.${c}.iso ${a}/${c}.iso;
                echo " Successful!" >> $LOGDIR/uburelease.log;
            else
                echo " Failed!" >> $LOGDIR/uburelease.log;
            fi
        done
    fi
done

echo -n "Done at " >> $LOGDIR/uburelease.log
date >> $LOGDIR/uburelease.log && echo "" >> $LOGDIR/uburelease.log
fi
echo "Syncing ISOs..." >> $LOGDIR/uburelease.log
rsync -av --partial --timeout=600 \
      $RE_EXCLUDE \
      $RE_HOST::$RE_DIR/ $RELEASE >> $LOGDIR/uburelease.log 2>&1

if [ `grep -c '^total size is' $LOGDIR/uburelease.log ` -ne 2 ]; then
        ( echo "Eeek. Ubuntu iso rsync broke down... Check logs.."; \
          egrep '^write failed|@ERROR' $LOGDIR/uburelease.log ) | mail -s "Ubuntu release sync failed" $EMAIL
        echo "Eeek. Ubuntu iso rsync broke down..." >> $LOGDIR/uburelease.log
        exit 2
fi

echo -n "Done at " >> $LOGDIR/uburelease.log
date >> $LOGDIR/uburelease.log && echo "" >> $LOGDIR/uburelease.log
rm -f $LOCK > /dev/null 2>&1
date -u > "${RELEASE}/.trace/${HOSTNAME}"
